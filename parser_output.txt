[FunctionCreation { name: "main", return_type: Void, arguments: [], body: [VariableDeclaration { name: "x", _type: Type("u16"), expression: [(Name { name_string: "factorial" }, (17, 1)), (LParen, (26, 1)), (Number { number_as_string: "5" }, (27, 1)), (RParen, (28, 1))] }] }, FunctionCreation { name: "factorial", return_type: Type("u16"), arguments: [("n", Type("u16"))], body: [IfElse { condition: [(Name { name_string: "n" }, (7, 5)), (COMPEqual, (9, 5)), (Number { number_as_string: "0" }, (12, 5))], if_body: [Return { value: [(Number { number_as_string: "1" }, (15, 6))] }], else_body: Some([Return { value: [(Name { name_string: "n" }, (15, 8)), (MUL, (17, 8)), (Name { name_string: "factorial" }, (19, 8)), (LParen, (28, 8)), (Name { name_string: "n" }, (29, 8)), (SUB, (31, 8)), (Number { number_as_string: "1" }, (33, 8)), (RParen, (34, 8))] }]) }] }]rn { value: [(Name { name_string: "x" }, (15, 12)), (ADD, (17, 12)), (Number { number_as_string: "2" }, (19, 12))] }], else_body: Some([IfElse { condition: [(Name { name_string: "x" }, (13, 13)), (COMPEqual, (15, 13)), (Number { number_as_string: "3" }, (18, 13))], if_body: [Return { value: [(Name { name_string: "x" }, (15, 14)), (SUB, (17, 14)), (Number { number_as_string: "2" }, (19, 14))] }], else_body: Some([Return { value: [(Name { name_string: "x" }, (15, 16))] }]) }]) }, Return { value: [(Name { name_string: "x" }, (11, 18))] }] }]string: "x" }, (15, 16))] }, Operation { operation: [(RBrace, (4, 17)), (ReturnKeyword, (4, 18)), (Name { name_string: "x" }, (11, 18))] }]) }] }], (LBrace, (9, 17)), (ReturnKeyword, (8, 18)), (Name { name_string: "x" }, (15, 18)), (SUB, (17, 18)), (Number { number_as_string: "2" }, (19, 18))] }, Operation { operation: [(RBrace, (4, 19)), (ReturnKeyword, (4, 20)), (Name { name_string: "x" }, (11, 20))] }] }]