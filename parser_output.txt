[FunctionCreation { name: "main", return_type: Void, arguments: [], body: [VariableDeclaration { name: "x", _type: Type("u16"), expression: [Operation { operation: [(Number { number_as_string: "1" }, (17, 1))] }] }, Loop { body: [Operation { operation: [(Name { name_string: "x" }, (8, 3)), (ADDEqual, (10, 3)), (Number { number_as_string: "1" }, (13, 3))] }, FunctionCall { name: "was_dead", arguments: [(Name { name_string: "x" }, (17, 4))] }, Break] }] }, FunctionCreation { name: "was_dead", return_type: Type("u16"), arguments: [("x", Type("u16"))], body: [IfElse { condition: [(Name { name_string: "x" }, (7, 10)), (COMPEqual, (9, 10)), (Number { number_as_string: "2" }, (12, 10))], if_body: [Return { value: [(Name { name_string: "x" }, (15, 11)), (ADD, (17, 11)), (Number { number_as_string: "2" }, (19, 11))] }], else_body: None }, Return { value: [(Name { name_string: "x" }, (11, 13))] }] }][(Name { name_string: "x" }, (11, 13))] }] }]ody: [Operation { operation: [(Name { name_string: "x" }, (8, 18)), (ADDEqual, (10, 18)), (Number { number_as_string: "4" }, (13, 18))] }, FunctionCall { name: "was_dead", arguments: [(Name { name_string: "x" }, (17, 19))] }, Break] }] }, FunctionCreation { name: "was_dead", return_type: Type("u16"), arguments: [("x", Type("u16"))], body: [Return { value: [(Name { name_string: "x" }, (11, 25))] }] }]